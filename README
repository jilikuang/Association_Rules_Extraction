COMS E6111 Advanced Database Systems - Project 3

a) Group members

    Di Ruan (dr2763)
    Jie-Gang Kuang (jk3735)


b) File list
    main.py
    analyze.py
    Computation.py
    csvproc.py
    DOHMH_New_York_City_Restaurant_Inspection_Results.csv
    DOHMH_New_York_City_Restaurant_Inspection_Results_reduced.csv
    example-run.txt
    README


c) Description
    (a) The original version of the dataset we use is "DOHMH New York City Restaurant Inspection Result" from NYC
    Open Data (https://data.cityofnewyork.us/Health/DOHMH-New-York-City-Restaurant-Inspection-Results/xx67-kt59?).

    (b)
    In the original dataset, there are 498433 rows and 18 columns, which are CAMIS, DBA, BORO, BUILDING, STREET,
    ZIPCODE, PHONE, CUISINE DESCRIPTION, INSPECTION DATE, ACTION, VIOLATION CODE, VIOLATION DESCRIPTION, CRITICAL FLAG,
    SCORE, GRADE, GRADE DATE, RECORD DATE, INSPECTION TYPE. We delete the following columns 0 1 3 4 5 6 9 11 15 16.

    To make the data more applicable, we did the following steps:
        (1) Remove the row with empty column
        (2) convert the exact date to Quarter
        (3) Convert the exact cuisine type to bigger category: Asian(A), European(E), North American(N),
        South American(S), Africa(AF), and Other(O). The restaurants are classified by the cuisine description
        following the mapping mentioned in part e).
        (4) ignore the score larger than 30

    (c) The reason why this INTEGRATED-DATASET is interesting is that ...


d) How to run:

    python main.py <CSV filepath> <min_supp> <min_conf>
    where:
        * CSV filepath: the CSV file
        * min_supp: the minimum/threshold of support
        * min_conf: the minimum/threshold of confidence


e) Internal Design

    The program is composed of 3 parts: Data classification, A-priori algorithm, Display

        Data classification: Since part of data is numerical, we need to classify them into several classes so that
        we can have enough support for a specific class. And it can produce more meaningful result.

        The classical version of a-priori algorithm:
        1. Compute the high frequent item sets
        2. Generate all possible association rules based on the frequent item sets
        3. Get all based on the min-support and min-confidence

        Display: Display the results according to the requirement


f) Interesting Sample

    If we run the following command with min_sup = 0.5 and min_conf = 0.8,

    python main.py 'sample/DOHMH_New_York_City_Restaurant_Inspection_Results_reduced.csv' 0.5 0.8

    The interesting point is that ...


e) Additional Information

    The mapping from cuisine type to its category is listed below:
    A:
        Afghan, Asian, Bangladeshi, Chinese, Chinese/Cuban, Chinese/Japanese, Filipino, Indian, Indonesian, Iranian,
        Japanese, Jewish/Kosher, Korean, Middle Eastern, Pakistani, Thai, Turkish, Vietnamese/Cambodian/Malasian
    E:
        Australian, Bagels/Pretzeis, Czech, Eastern European, English, French, German, Greek, Irish, Italian,
        Mediterranean, Pizza, Pizza/Italian, Polish, Portuguese, Russian, Scandinavian, Spanish, Tapas
    N:
        American, Barbecue, Cajun, Californian, Caribbean, Chicken, Creole, Creole/Cajun, Hamburgers, Hawaiian,
        Hotdogs, Hotdogs/Pretzels, Mexican, Polynesian, Sandwiches, Sandwiches/Salads/Mixed Buffet, Southwestern,
        Steak, Tex-Mex
    S:
        Brazillian, Chilean, Latin, Peruvian
    AF:
        African, Armenian, Egyptian, Ethiopian, Moroccan
    O:
        Bakery, Bottled beverages, Cafe/Coffee/Tea, Continental, Delicatessen, Donuts, Fruit/Vegetables, Ice cream,
        Juice, Nuts/Confectionary, Pancakes/Waffles, Salads, Seafood, Soul Food, Soups, Soups/Sandwiches, Vegetarian