COMS E6111 Advanced Database Systems - Project 3

a) Group members

    Di Ruan (dr2763)
    Jie-Gang Kuang (jk3735)


b) File list
    main.py
    computation.py
    csvproc.py
    INTEGRATED-DATASET.csv
    example-run.txt
    README


c) Description
    (a)
    The original version of the dataset we use is "DOHMH New York City Restaurant Inspection Result" from NYC
    Open Data (https://data.cityofnewyork.us/Health/DOHMH-New-York-City-Restaurant-Inspection-Results/xx67-kt59?).

    (b)
    In the original dataset, there are 498433 rows and 18 columns, which are CAMIS, DBA, BORO, BUILDING, STREET,
    ZIPCODE, PHONE, CUISINE DESCRIPTION, INSPECTION DATE, ACTION, VIOLATION CODE, VIOLATION DESCRIPTION, CRITICAL FLAG,
    SCORE, GRADE, GRADE DATE, RECORD DATE, INSPECTION TYPE. We delete the following columns 0 1 3 4 5 6 9 11 15 16.
    The reasons we delete those columns are listed as follows:
        * CAMIS is simply the id number relative to DBA for the City-wide Agency Management Information System, which
          is meaningless to our interpretation anyway.
        * DBA (Doing Business As) is the name of the business entity, which is relatively diverse in the whole dataset.
        * BUILDING, STREET, PHONE are highly related to each business entity individually so they are diverse as well.
        * ZIPCODE is the number for each small region and they are diverse as well.
        * In the ACTION field, a large majority of the content is "violations were cited in the following area(s)."
          so that the result is not representative.
        * The content VIOLATION DESCRIPTION is the details of the violation which are too diverse for meaningful results.
        * GRADE DATE and RECORD DATE are discarded because these two dates are simply related to the governmental work
          but not to the inspection such that they are not related to the inspection we are interested in.

    Furthermore, to make the data more applicable, we did the following steps:
        (1) Remove the row with empty column.
        (2) Add the new column of inspection season according ot the exact inspection date.
        (3) Add the new column of cuisine region according to the exact cuisine type for bigger category: Asian(A),
            European(E), North American(N), South American(S), Africa(AF), and Other(O). The restaurants are classified
            by the cuisine description following the mapping mentioned in part e).
        (4) Cap the score with 30. Some of the scores are too high such that they bias the general cases.

    We constructed csvporc.py to trim CSV file and add supplementary data in the CSV file. The usage of the python
    script is shown as follows:

        python csvproc.py <input CSV file> <trim|modify> <arguments for trim>
        where:
            * input CSV file: the CSV file to be processed
            * trim|modify: trim the target CSV file | add/modify the target CSV file
            * arguments for trim: the indexes of columns to be removed (could be left empty)

    The input CSV file to csvproc.py will not be modified, but an output.csv will be generated for the desired
    operation.

    (c) The reason why we think this INTEGRATED-DATASET is interesting is that:
        (1) The original dataset is one of the well-documented datasets in NYC Open Data.
        (2) There are sufficient amount of data in the dataset.
        (3) Intuitively, there could be at least some relationship between GRADE, SCORE, and CRITICAL FLAG.


d) How to run:

    python main.py <CSV filepath> <min_supp> <min_conf>
    where:
        * CSV filepath: the CSV file
        * min_supp: the minimum/threshold of support
        * min_conf: the minimum/threshold of confidence


e) Internal Design

    The program is composed of 3 parts: Data classification, a-priori algorithm, Display

        Data classification: Since part of data is numerical, we need to classify them into several classes so that
        we can have enough support for a specific class. In this way, we can produce more meaningful result.

        The second part is the implementation of classical version of a-priori algorithm.
        1. Compute the high frequent item sets
        2. Generate all possible association rules based on the frequent item sets
        3. Get all association rules that are higher than on the min-support and min-confidence

        Display and : Display the results according to the requirement in the instruction


f) Interesting Sample

    If we run the following command with min_sup = 0.2 and min_conf = 0.65,

    python main.py INTEGRATED-DATASET.csv 0.2 0.65

    Here are the association rules that has enough support and confidence. If we analyze them one by one, we may find
    that all of them make perfect sense in the real life.

    (1) [Not Critical] => [A], (Conf: 79.4539%, Supp: 37.2661%)
        If the feedback from customers are not critical, it's likely that they would give the restaurant an A.

    (2) [SCORE_9.0-12.0] => [A], (Conf: 98.5664%, Supp: 27.3189%)
        If the score is between 9-12 which is high enough, it's likely that the restaurant will get an A.

    (3) [Cycle Inspection / Initial Inspection] => [A], (Conf: 99.9956%, Supp: 30.9877%)
        If the restaurant is under cycle inspection, they will pay more attention to the customers and hence get an A.

    (4) [SCORE_12.0-15.0] => [A], (Conf: 95.7923%, Supp: 26.6340%)
        If the score is between 12-15 which is high enough, it's likely that the restaurant will get an A.

    (5) [MANHATTAN] => [A], (Conf: 71.4954%, Supp: 29.2866%)
        Most restaurants in Manhattan are good on average and hence are worthy getting an A.

    (6) [Spring] => [A], (Conf: 70.2342%, Supp: 21.2163%)
        In spring, when there are more food resources and the mood of customers are better, they would give more A.

    (7) [NorthAmerican] => [A], (Conf: 73.4084%, Supp: 30.6486%)
        Here in US, North American food are more popular, of course. Therefore, they are more likely to get an A.

    (8) [Critical] => [Cycle Inspection / Re-inspection], (Conf: 65.2341%, Supp: 34.6375%)
        If the feedback from the customer is critical, the restaurant are more likely to be under cycle inspection.

    (9) [American] => [NorthAmerican], (Conf: 100.0000%, Supp: 24.0104%)
        There are more American cuisine restaurant in NYC.


e) Additional Information

    The mapping from cuisine type to its category is listed below:
    Asian:
        Afghan, Asian, Bangladeshi, Chinese, Chinese/Cuban, Chinese/Japanese,
        Filipino, Indian, Indonesian, Iranian, Japanese, Jewish/Kosher, Korean,
        Middle Eastern, Pakistani, Thai, Turkish, Vietnamese/Cambodian/Malaysia
    European:
        Australian, Bagels/Pretzeis, Czech, Eastern European, English, French,
        German, Greek, Irish, Italian, Mediterranean, Pizza, Pizza/Italian, Polish,
        Portuguese, Russian, Scandinavian, Spanish, Tapas, Bagels/Pretzels
    NorthAmerican:
        American, Barbecue, Cajun, Californian, Caribbean, Chicken, Creole, Creole/Cajun,
        Hamburgers, Hawaiian, Hotdogs, Hotdogs/Pretzels, Mexican, Polynesian, Sandwiches,
        Sandwiches/Salads/Mixed Buffet, Southwestern, Steak, Tex-Mex,
        Latin (Cuban, Dominican, Puerto Rican, South & Central American)
    SouthAmerican:
        Brazilian, Chilean, Latin, Peruvian
    Africa:
        African, Armenian, Egyptian, Ethiopian, Moroccan
    Other:
        Bakery, Bottled beverages, Cafe/Coffee/Tea, Continental, Delicatessen, Donuts,
        Fruit/Vegetables, Ice cream, Juice, Nuts/Confectionary, Pancakes/Waffles, Salads,
        Seafood, Soul Food, Soups, Soups/Sandwiches, Vegetarian, 'Ice Cream, Gelato, Yogurt, Ices',
        Caf_/Coffee/Tea, Caf/Coffee/Tea, Not Listed/Not Applicable, Other,
        Bottled beverages, 'including water, sodas, juices, etc.', 'Juice, Smoothies, Fruit Salads',
        Soups & Sandwiches', Fruits/Vegetables
